{"version":3,"file":"static/js/638.864e9678.chunk.js","mappings":"2PAEaA,EAAaC,EAAAA,GAAAA,KAAH,uNAUVC,EAAmBD,EAAAA,GAAAA,OAAH,qZAkBhBE,EAAmBF,EAAAA,GAAAA,MAAJ,2S,SC3BfG,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAM5B,OACE,+BACE,UAACL,EAAD,CAAYK,SAPK,SAAAC,GACnBA,EAAEC,iBACCD,EAAEE,OAAOC,SAASC,MAAMC,OAC1BN,EAASC,EAAEE,OAAOC,SAASC,MAAMC,MACnC,EAGG,WACE,SAACT,EAAD,CAAkBU,KAAK,SAAvB,qBAGA,SAACT,EAAD,CACES,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,KAAK,cAKd,E,SCuBD,EA3Ce,WACb,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMhB,EAAQe,EAAaE,IAAI,SAwB7B,OAnBFC,EAAAA,EAAAA,YAAU,WACHlB,IAGLW,EAAS,KACTQ,EAAAA,EAAAA,IAAoBnB,GACjBoB,MAAK,SAAAC,GACCA,EAAIC,QAAQC,OAIfd,GAAU,SAAAe,GAAU,cAAQH,EAAIC,QAAZ,KAHpBb,EAAU,IACVgB,MAAM,sBAIT,IACAC,OAAM,SAAAhB,GACLC,EAASD,EAAMiB,QAChB,IACAC,SAAQ,kBAAMC,QAAQC,IAAI,UAAlB,IACZ,GAAE,CAAC9B,EAAOW,KAET,4BACE,SAACjB,EAAD,CAAaC,SAxBI,SAAAoC,GACnBf,EAAgB,CAAEhB,MAAO+B,GAC1B,IAuBIrB,IAAS,uBAAIA,KACd,wBACGF,EAAOwB,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,GAAME,MAAO,CAACC,KAAMzB,GAAjC,SAA6CqB,KADtCC,EADC,QAQnB,C","sources":["components/Search/StyledSearch.js","components/Search/SearchMovie.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport const SearchForm = styled.form`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n    margin-top: 10px;\n    `\nexport const SearchFormButton = styled.button`\n    display: inline-block;\n    width: 90px;\n    height: 48px;\n    border: 0;\n    font-size:18px;\n    margin-left: 15px;\n    background-size: 40%;\n    background-repeat: no-repeat;\n    background-position: center;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n    &:hover {\n    opacity: 1;}\n    `\n\nexport const SearchFormInput  = styled.input`\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 18px;\n    border: 1px;\n    outline: none;\n    margin-left: 25px;\n    padding-left: 4px;\n    padding-right: 4px;\n    padding-top: 8px;\n    &::placeholder {\n    font: inherit;\n    }\n    `","import PropTypes from 'prop-types';\nimport { SearchForm, SearchFormButton, SearchFormInput } from './StyledSearch';\n\nexport const SearchMovie = ({ onSubmit }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    if(e.target.elements.query.value)\n    {onSubmit(e.target.elements.query.value)};\n  };\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormButton type=\"submit\" >\n          Search\n        </SearchFormButton>\n        <SearchFormInput\n          type=\"text\"\n          autocomplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          name=\"query\"\n        />\n      </SearchForm>\n    </>\n  );\n};\nSearchMovie.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { SearchMovie } from '../../components/Search/SearchMovie';\nimport { fetchMoviesBySymbol } from '../../services/movieAPI';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n \n  const handleSearch = data => {\n    setSearchParams({ query: data });\n  };\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    setError('');\n    fetchMoviesBySymbol(query)\n      .then(res => {\n        if (!res.results.length) {\n          setMovies([]);\n          alert('Try another query!');\n        } else {\n          setMovies(prevMovies => [...res.results]);\n        }\n      })\n      .catch(error => {\n        setError(error.message);\n      })\n      .finally(() => console.log('Nothing'));\n  }, [query, setError]);\n    return (\n    <div>\n      <SearchMovie onSubmit={handleSearch}></SearchMovie>\n      {error && <p>{error}</p>}\n      <ul>\n        {movies.map(({ title, id }) => (\n          <li key={id}>\n            <Link to={`${id}`} state={{from: location}}>{title}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["SearchForm","styled","SearchFormButton","SearchFormInput","SearchMovie","onSubmit","e","preventDefault","target","elements","query","value","type","autocomplete","autoFocus","placeholder","name","useState","movies","setMovies","error","setError","location","useLocation","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchMoviesBySymbol","then","res","results","length","prevMovies","alert","catch","message","finally","console","log","data","map","title","id","to","state","from"],"sourceRoot":""}